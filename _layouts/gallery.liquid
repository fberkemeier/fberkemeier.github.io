---
layout: default
---
{% if page._styles %}
  <!-- Page/Post style -->
  <style type="text/css">
    {{ page._styles }}
  </style>
{% endif %}

<div class="post">
  <header class="post-header">
    <h1 class="post-title">{{ page.title }}</h1>
    <p class="post-description">{{ page.description }}</p>
  </header>

  <article>
    <div style="text-align: justify;">
      {{ content }}
    </div>
  </article>

  {% if page.related_publications %}
    <h2>References</h2>
    <div class="publications" style="text-align: justify;">
      {% bibliography --cited_in_order %}
    </div>
  {% endif %}

  {% if site.giscus and page.giscus_comments %}
    {% include giscus.liquid %}
  {% endif %}
</div>

<!-- Medium Zoom Script -->
<script src="https://cdn.jsdelivr.net/npm/medium-zoom@1.0.6/dist/medium-zoom.min.js"></script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const zoom = mediumZoom('.gallery-item img', {
      background: 'transparent'
    });

    zoom.on('open', (event) => {
      const zoomedImg = event.target;
      zoomedImg.style.height = 'auto';
      zoomedImg.style.objectFit = 'contain';

      // Create caption dynamically and apply fade-in effect
      const captionText = zoomedImg.closest('.gallery-item').dataset.caption;
      let caption = document.createElement('div');
      caption.classList.add('zoom-caption');
      caption.textContent = captionText;
      document.body.appendChild(caption);

      setTimeout(() => {
        caption.style.opacity = '1'; // Fade in the caption
      }, 50); // Small delay for smoother effect

      // Add the reduced-opacity class to the body to apply opacity effect
      document.body.classList.add('reduced-opacity');
    });

    zoom.on('close', (event) => {
      const zoomedImg = event.target;
      zoomedImg.style.height = '200px';
      zoomedImg.style.objectFit = 'cover';

      // Fade out and remove the caption
      const caption = document.querySelector('.zoom-caption');
      if (caption) {
        caption.style.opacity = '0';
        setTimeout(() => caption.remove(), 300); // Remove after fade-out transition
      }

      // Remove the reduced-opacity class when zooming out
      document.body.classList.remove('reduced-opacity');
    });
  });
</script>

<!-- CSS for Gallery Grid Layout, Reduced Opacity, and Smooth Caption Transition -->
<style>
  /* Gallery Grid Layout */
  .gallery-container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px;
    margin: 0px;
  }

  .gallery-item {
    position: relative;
    overflow: hidden;
  }

  .gallery-item img {
    width: 100%;
    height: 200px;
    object-fit: cover;
    border-radius: 5px;
    display: block;
  }

  /* Reduced Opacity for Background */
  .reduced-opacity *:not(.medium-zoom-image):not(.zoom-caption) {
    opacity: 0.65; /* Reduce opacity for all elements except zoomed image and caption */
    transition: opacity 0.3s ease; /* Smooth transition for opacity change */
  }

  /* Styling for the Zoom Caption with Smooth Transition */
  .zoom-caption {
    opacity: 0;
    position: fixed;
    bottom: 10%;
    left: 50%;
    transform: translateX(-50%);
    background: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 10px 20px;
    border-radius: 8px;
    font-size: 1.1em;
    text-align: center;
    z-index: 3000;
    max-width: 80%;
    transition: opacity 0.3s ease;
  }
</style>
